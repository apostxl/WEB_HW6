from sqlalchemy import create_engine, Column, Integer, String, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship, sessionmaker
from faker import Faker
import random

fake = Faker()

Base = declarative_base()

class Student(Base):
    __tablename__ = 'students'

    id = Column(Integer, primary_key=True)
    name = Column(String)
    group_id = Column(Integer, ForeignKey('groups.id'))
    grades = relationship('Grade')

class Group(Base):
    __tablename__ = 'groups'

    id = Column(Integer, primary_key=True)
    name = Column(String)
    students = relationship('Student')

class Teacher(Base):
    __tablename__ = 'teachers'

    id = Column(Integer, primary_key=True)
    name = Column(String)
    subjects = relationship('Subject')

class Subject(Base):
    __tablename__ = 'subjects'

    id = Column(Integer, primary_key=True)
    name = Column(String)
    teacher_id = Column(Integer, ForeignKey('teachers.id'))
    grades = relationship('Grade')

class Grade(Base):
    __tablename__ = 'grades'

    id = Column(Integer, primary_key=True)
    student_id = Column(Integer, ForeignKey('students.id'))
    subject_id = Column(Integer, ForeignKey('subjects.id'))
    grade = Column(Integer)

engine = create_engine('sqlite:///db.sqlite')
Base.metadata.create_all(engine)


Session = sessionmaker(bind=engine)
session = Session()


groups = [Group(name=f'Group {i+1}') for i in range(3)]
session.add_all(groups)
session.commit()


teachers = [Teacher(name=fake.name()) for _ in range(3)]
session.add_all(teachers)
session.commit()

subjects = []
for i in range(5, 9):
    teacher = random.choice(teachers)
    subject = Subject(name=f'Subject {i}', teacher_id=teacher.id)
    subjects.append(subject)
session.add_all(subjects)
session.commit()

students = []
for _ in range(30, 50):
    group = random.choice(groups)
    student = Student(name=fake.name(), group_id=group.id)
    students.append(student)
    session.add(student)
    session.commit()

    for subject in subjects:
        grade = Grade(student_id=student.id, subject_id=subject.id, grade=random.randint(60, 100))
        session.add(grade)
session.commit()

print("Database created and populated with random data.")
